{
  "name": "Nanotwitter",
  "tagline": "a baby version of Twitter designed as a platform for experimentation with scaling issues",
  "body": "# NanoTwitter  [![Code Climate](https://codeclimate.com/github/FrankYan93/nanotwitter/badges/gpa.svg)](https://codeclimate.com/github/FrankYan93/nanotwitter)\r\nNanoTwitter is a ruby app with basic function of twitter. You can follow other users, tweet, like tweets and so on.\r\n\r\n# Authors\r\n\r\n- **Jiadong Yan**\r\n- **Jiaming Xu**\r\n- **Xinyi Jiang**\r\n\r\n# Summary Statement\r\nWe build this web application step by step with frequent integration of code using ***Github, Codeship, Heroku***.   \r\n1. Design the overall functionality and database(We use ***PostgreSQL***) schema.  \r\n2. Build the simple skeleton of a ***Sinatra*** application.  \r\n3. Design APIs that have the fundamental interaction with our database.  \r\n4. We use ***ActiveRecord*** to abstract database, which is a great tool implementing ORM(object-relation mapping).  \r\n5. Build some mini-tests and create test interface.  \r\n6. Create UI with ***erb*** (embedded ruby) and use ***JQuery*** to control some behavior of the website elements.  \r\n7. Include some CDN to beautify the website, such as ***Bootstrap***.  \r\n8. Using ***Redis***(a cache) to speed up the response by reducing direct database operations.  \r\n9. Using ***RabbitMQ***(queue) to communicate between different servers.  \r\n# Getting Started\r\n\r\nNotification service repo: https://github.com/FrankYan93/nanoNotification  \r\nWe must visit https://nano-notification.herokuapp.com/start to start our web service for notification.  \r\nMain website: https://nano-twitter-dratini.herokuapp.com  \r\nYou are welcome to sign up and have fun.\r\n\r\n## Running the tests\r\n\r\n**How to run tests**\r\n  ```\r\nrake (run all minitests)\r\nruby test/testUser/testGet.rb\r\nruby test/testUser/testUserCreate.rb\r\nruby test/testUser/testFollowUnfollow.rb\r\nruby test/testUser/testEditProfile.rb\r\nruby test/testTweet/testTweetCreate.rb\r\n  ```\r\n# Screenshots\r\n\r\n# Deployment\r\n\r\n# Built with\r\n\r\n- Ruby\r\n- Sinatra\r\n- Activerecord\r\n- PostgreSQL\r\n- Javascript\r\n- JQuery\r\n- Bootstrap\r\n- Bootbox\r\n- Rake\r\n- Redis\r\n- RabbitMQ\r\n- Resque\r\n- Rack\r\n- ...\r\n\r\n# Loader Test Results\r\n- 0-1000 over 1 min with the root url not logged in\r\n  1. Max # of clients active:1000\r\n  2. What time stopped:1min\r\n  3. average response time (ms):2503\r\n  4. min/max response times:15/7151\r\n  5. Error Rate:0%\r\n  6. total successes (response counts):11137\r\n- 0 - 500 in 1 min Logged In (Test 2) - User14, Verda\r\n  1. Max # of clients active:500\r\n  2. What time stopped:1min\r\n  3. average response time (ms):1987\r\n  4. min/max response times:12/4842\r\n  5. Error Rate:0%\r\n  6. total successes (response counts):6987\r\n- Logged in Random Tweets (Test 3) 0-500clients over 1 min\r\n  1. Max # of clients active:500\r\n  2. What time stopped:1min\r\n  3. average response time (ms):3353\r\n  4. min/max response times:17/7750\r\n  5. Error Rate:0%\r\n  6. total successes (response counts):4011\r\n  7. random send tweet:\"Hello,bonnie\"\r\n- All complete\r\n# Versioning\r\nnT1.0\r\n\r\n# License\r\n\r\nThis project is licensed under MIT License\r\n\r\n# Acknowledgments\r\n\r\n# Tips\r\n\r\n1. To run the test, conduct `rake db:test:prepare` and `rake db:test:load`\r\n   Then type `rake` in the terminal to run all the test\r\n\r\n\r\n2. Reset database: `heroku pg:reset DATABASE_URL`\r\n\r\n\r\n3. We must flush all redis after test api used, and restart app.\r\nrun `heroku redis:cli`  `flushall`\r\n\r\n4. `heroku run rake db:migrate`\r\n\r\n5. `lsof -i :4567` to see which process is running in port 4567\r\n\r\n6. https://nano-notification.herokuapp.com/start will start the rabbitmq notification service\r\n\r\n7. https://frankyan93.github.io/nanotwitter/ portfolio\r\n\r\n# Steps in local:\r\n\r\n1. git clone\r\n2. install redis in local and run redis by `redis-server` links: <http://download.redis.io/releases/redis-3.2.5.tar.gz> follow readme to install redis first\r\n3. install RabbitMQ server by `brew update`, `brew install rabbitmq`, should first install brew first. Run rabbitmq by `rabbitmq-server` if you have some problem to start, try `sudo chown $(whoami) /usr/local/share/man/man3` and `sudo chown $(whoami) /usr/local/share/man/man5`\r\n4. install all gems by `bundle install`\r\n5. install `postgreSQL` and open it\r\n6. run `rake db:migrate`\r\n7. run `ruby app.rb` to start the service\r\n8. open `0.0.0.0:4567` in the web browser\r\n9. reset data using test api\r\n10. done!\r\n\r\n# Last Modify Date\r\nDec 7, 2016\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}